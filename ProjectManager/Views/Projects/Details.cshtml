@model ProjectManager.Domain.Entities.Project

@{
    ViewData["Title"] = "Project Details";
}

<div class="row d-flex flex-row justify-content-center">
    <h2>Project Details</h2>
    <div class="d-sm-flex flex-row align-items-end justify-content-between">
        <h3>@Model.Name</h3>

        <div class="mt-2 mb-2">
            @if (User.IsInRole("admin") || User.IsInRole("manager"))
            {
                @Html.ActionLink("Edit", "Edit", "Projects", new { id = Model.Id }, new { Class = "btn btn-outline-primary" })
            }

            @if (User.Identity!.IsAuthenticated)
            {
                @Html.ActionLink("Back to Projects", "Index", "Projects", null, new { Class = "btn btn-outline-dark" })
            }
        </div>
    </div>
    <hr />

    <dl class="row">
        <dt class="col-sm-2">
            Project Name
        </dt>
        <dd class="col-sm-10">
            @Model.Name
        </dd>

        <dt class="col-sm-2">
            Description
        </dt>
        <dd class="col-sm-10">
            @Model.Description
        </dd>

        <dt class="col-sm-2">
            Start Time
        </dt>
        <dd class="col-sm-10">
            @Model.StartTime.ToString("g")
        </dd>

        <dt class="col-sm-2">
            End Time
        </dt>
        <dd class="col-sm-10">
            @Model.EndTime.ToString("g")
        </dd>

        <dt class="col-sm-2">
            Priority
        </dt>
        <dd class="col-sm-10">
            @Model.Priority
        </dd>
    </dl>
        
    <h4>Project Files</h4>
    @if (Model.ProjectFiles.Count > 0)
    {
        @foreach(var item in Model.ProjectFiles)
        {
            <div class="d-flex flex-row justify-content-between">
                @Html.ActionLink(item.FileName, "Download", "Projects", new { projectId = Model.Id, fileId = item.Id }, new { Class = "btn btn-outline-info mb-2 flex-grow-1" })

                @if (User.IsInRole("admin") || User.IsInRole("manager"))
                {
                    <button class="btn btn-outline-danger mb-2 ms-2 remove_file_btn" type="submit" data-project-id="@Model.Id" data-file-id="@item.Id">Remove</button>
                }
            </div>
        }
    }
    else
    {
        <h3>Project does not contain any file</h3>
    }
</div>

@section Scripts {
    <script>
        $(".remove_file_btn").click(function() {
            var button = $(this)
            var projectId = button.data("project-id")
            var fileId = button.data("file-id")

            var antiForgeryToken = $('input[name="__RequestVerificationToken"]').val();

            $.ajax({
                url: '@Url.Action("DeleteFile")',
                type: 'DELETE',
                data: { projectId: projectId, fileId: fileId },
                headers: {
                    'RequestVerificationToken': antiForgeryToken
                },
                success: () => {
                    button.closest('div').remove();
                },
                error: function (xhr, status, error) {
                    alert("Error, please, try again: ", error);
                }
            })
        })
    </script>
}
