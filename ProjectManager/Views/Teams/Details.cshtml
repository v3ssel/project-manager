@model ProjectManager.Domain.Entities.Team

@{
    ViewData["Title"] = "Team Details";
}

<div class="row d-flex flex-row justify-content-center">
    <div class="d-sm-flex flex-row align-items-end justify-content-between">
        <h2>Team @Model.Name Details</h2>

        <div class="mt-2 mb-2">
            @if (User.IsInRole("admin") || User.IsInRole("manager"))
            {
                @Html.ActionLink("Edit Team", "Edit", "Teams", new { id = Model.Id }, new { Class = "btn btn-outline-primary" })
            }

            @Html.ActionLink("Back to Teams", "Index", "Teams", null, new { Class = "btn btn-outline-dark" })
        </div>
    </div>
    <hr />

    <dl class="row mb-0">
        <dt class = "col-sm-2">
            Team Name
        </dt>
        <dd class = "col-sm-10">
            @Model.Name
        </dd>

        <dt class = "col-sm-2">
            Project Name
        </dt>
        <dd class = "col-sm-10">
            @Model.Project?.Name
        </dd>
        
        <dt class = "col-sm-2">
            Lead
        </dt>
        <dd class = "col-sm-10">
            @string.Join(' ', Model.Lead!.FirstName, Model.Lead.MiddleName, Model.Lead.LastName)
        </dd>
    </dl>
    <hr/>

    <h2>Members</h2>
    @if(User.IsInRole("admin") || User.IsInRole("manager"))
    {
        @using(Html.BeginForm("AddMember", "Teams", FormMethod.Post))
        {
            <div class="row align-items-center justify-content-between">
                <input type="hidden" name="teamId" value="@Model.Id" />
                <div class="col-lg-10">
                    <label for="searchList">Add employee to team</label>
                    <select name="employeeId" class="form-control me-1" id="searchList"></select>
                </div>

                <div class="col-sm-2 form-group mt-3">
                    <input type="submit" value="Add to team" class="btn btn-primary" />
                </div>
            </div>
        }
    }

    @if (Model.Members.Count > 0)
    {
    <table class="table table-striped table-hover">
        <thead>
            <tr>
                <th>First Name</th>
                <th>Middle Name</th>
                <th>Last Name</th>
                <th>Email</th>

                @if (!(Model.Members.Count == 1 && Model.Members.First().Id == Model.LeadId && !User.IsInRole("admin")))
                {
                <th></th>
                }
            </tr>
        </thead>

        <tbody>
            @foreach (var item in Model.Members)
            {
                <tr>
                    <td class="align-middle">
                        @item.FirstName
                    </td>
                    <td class="align-middle">
                        @item.MiddleName
                    </td>
                    <td class="align-middle">
                        @item.LastName
                    </td>
                    <td class="align-middle">
                        @item.Email
                    </td>

                    @if (!(Model.Lead.Id == item.Id && Model.Members.Count == 1 && !User.IsInRole("admin")))
                    {
                    <td class="align-middle text-end">
                        @if(User.IsInRole("admin"))
                        {
                            @Html.ActionLink("Edit", "Edit", "Employees", new { id = @item.Id }, new { Class = "btn btn-outline-primary mt-1" })
                        }

                        @if(Model.Lead.Id != item.Id && (User.IsInRole("admin") || User.IsInRole("manager")))
                        {
                            <button class="btn btn-outline-danger mt-1 remove_member_btn" data-team-id="@Model.Id" data-employee-id="@item.Id">Remove</button>
                        }
                    </td>
                    }
                </tr>
            }
        </tbody>
    </table>
    }
    else
    {
        <h3>No members in this team</h3>
    }
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <script>
        $(document).ready(() => {
            makeEmployeeSearchBox($("#searchList"), "@Url.Action("Search", "Employees")")

            $(".remove_member_btn").click(function() {
                var button = $(this);
                var teamId = button.data("team-id")
                var employeeId = button.data("employee-id")

                var antiForgeryToken = $('input[name="__RequestVerificationToken"]').val();

                $.ajax({
                    url: '@Url.Action("RemoveMember")',
                    type: 'DELETE',
                    data: { teamId: teamId, employeeId: employeeId },
                    headers: {
                        'RequestVerificationToken': antiForgeryToken
                    },
                    success: () => {
                        button.closest('tr').remove();
                    },
                    error: function (xhr, status, error) {
                        alert("Error, please, try again: ", error);
                    }
                })
            })

        })
    </script>
}
