@model IEnumerable<ProjectManager.Domain.Entities.Team>

@{
    ViewData["Title"] = "Teams";
}

<div class="d-sm-flex flex-row align-items-end justify-content-between">
    <h1>@ViewData["Title"]</h1>

    @if (User.IsInRole("admin") || User.IsInRole("manager"))
    {
        <a asp-action="Create" class="btn btn-outline-info">Add team</a>
    }
</div>

<table class="table table-striped table-hover">
    <thead>
        <tr>
            <th>#</th>
            <th>Team Name</th>
            <th>Project Name</th>
            <th>Team Lead</th>
            <th></th>
        </tr>
    </thead>

    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td class="align-middle">
                    @item.Id
                </td>
                <td class="align-middle">
                    @item.Name
                </td>
                <td class="align-middle">
                    @item.Project?.Name
                </td>
                <td class="align-middle">
                    @string.Join(' ', item.Lead?.FirstName, item.Lead?.MiddleName, item.Lead?.LastName)
                </td>

                <td class="align-middle text-center">
                    <a class="btn btn-outline-info mt-1" asp-action="Details" asp-route-id="@item.Id">Details</a>

                    @if (User.IsInRole("admin") || User.IsInRole("manager"))
                    {
                        <a class="btn btn-outline-primary mt-1" asp-action="Edit" asp-route-id="@item.Id">Edit</a>
                        <a class="btn btn-outline-danger mt-1" asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                    }
                </td>
            </tr>
        }
    </tbody>
</table>
